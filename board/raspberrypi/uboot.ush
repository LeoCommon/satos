test -n "${BOOT_ORDER}" || setenv BOOT_ORDER "A B"
test -n "${BOOT_A_LEFT}" || setenv BOOT_A_LEFT 3
test -n "${BOOT_B_LEFT}" || setenv BOOT_B_LEFT 3
test -n "${bootargs_satos}" || setenv bootargs_satos rootwait console=tty1 console=ttyAMA0,115200 fsck.repair=yes panic=2

setenv bootargs_a "root=/dev/mmcblk0p2 rootfstype=squashfs ro"
setenv bootargs_b "root=/dev/mmcblk0p3 rootfstype=squashfs ro"

# Preserve origin bootargs
setenv bootargs_rpi
setenv fdt_org ${fdt_addr}
fdt addr ${fdt_org}
fdt get value bootargs_rpi /chosen bootargs

setenv bootargs
for BOOT_SLOT in "${BOOT_ORDER}"; do
  if test "x${bootargs}" != "x"; then
    # skip remaining slots
  elif test "x${BOOT_SLOT}" = "xA"; then
    if test ${BOOT_A_LEFT} -gt 0; then
      setexpr BOOT_A_LEFT ${BOOT_A_LEFT} - 1
      echo "Trying to boot slot A, ${BOOT_A_LEFT} attempts remaining. Loading kernel ..."
      if load ${devtype} ${devnum}:2 ${kernel_addr_r} boot/Image; then
          setenv bootargs "${bootargs_satos} ${bootargs_rpi} ${bootargs_a} rauc.slot=A"
      fi
    fi
  elif test "x${BOOT_SLOT}" = "xB"; then
    if test ${BOOT_B_LEFT} -gt 0; then
      setexpr BOOT_B_LEFT ${BOOT_B_LEFT} - 1
      echo "Trying to boot slot B, ${BOOT_B_LEFT} attempts remaining. Loading kernel ..."
      if load ${devtype} ${devnum}:3 ${kernel_addr_r} boot/Image; then
          setenv bootargs "${bootargs_satos} ${bootargs_rpi} ${bootargs_b} rauc.slot=B"
      fi
    fi
  fi
done

setenv fdt_addr
if test -n "${bootargs}"; then
  saveenv
else
  echo "No valid slot found, resetting tries to 3"
  setenv BOOT_A_LEFT 3
  setenv BOOT_B_LEFT 3
  saveenv
  reset
fi

echo "Starting kernel"
booti ${kernel_addr_r} - ${fdt_org}

echo "Boot failed, resetting..."
reset